<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Functional.CQS.AOP.MetricsCapturing</name>
    </assembly>
    <members>
        <member name="T:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForCommand">
            <summary>
            Marker interface for metrics capturing strategies used by <see cref="T:Functional.CQS.ICommandHandler`2"/> and <see cref="T:Functional.CQS.IAsyncCommandHandler`2"/>.
            Used internally by IQ.Vanilla.CQS.AOP.  Implement <see cref="T:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForCommand`2"/> instead.
            </summary>
        </member>
        <member name="T:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForCommand`2">
            <summary>
            Interface for metrics capturing strategies used by <see cref="T:Functional.CQS.ICommandHandler`2"/> and <see cref="T:Functional.CQS.IAsyncCommandHandler`2"/>.
            </summary>
            <typeparam name="TCommand">The command type.</typeparam>
            <typeparam name="TError">The error type.</typeparam>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForCommand`2.OnInvocationStart(`0)">
            <summary>
            Called immediately prior to handling the command.
            </summary>
            <param name="parameters">The command parameters.</param>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForCommand`2.OnInvocationCompletedSuccessfully(`0,Functional.Result{Functional.Unit,`1},System.TimeSpan)">
            <summary>
            Called immediately after successfully handling the query and receiving a result.
            </summary>
            <param name="parameters">The command parameters.</param>
            <param name="result">The command result.</param>
            <param name="timeElapsed">The time elapsed since the start of invocation.</param>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForCommand`2.OnInvocationException(`0,System.Exception,System.TimeSpan)">
            <summary>
            Called immediately after the command failed due to an uncaught exception.
            </summary>
            <param name="parameters">The command parameters.</param>
            <param name="exception">The exception that caused the command handler to fail.</param>
            <param name="timeElapsed">The time elapsed since the start of invocation.</param>
        </member>
        <member name="T:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForQuery">
            <summary>
            Marker interface for metrics capturing strategies used by <see cref="T:Functional.CQS.IQueryHandler`2"/> and <see cref="T:Functional.CQS.IAsyncQueryHandler`2"/>.
            Used internally by IQ.Vanilla.CQS.AOP.  Implement <see cref="T:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForQuery`2"/> instead.
            </summary>
        </member>
        <member name="T:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForQuery`2">
            <summary>
            Interface for metrics capturing strategies used by <see cref="T:Functional.CQS.IQueryHandler`2"/> and <see cref="T:Functional.CQS.IAsyncQueryHandler`2"/>.
            </summary>
            <typeparam name="TQuery">The query type.</typeparam>
            <typeparam name="TResult">The type of data returned from the query.</typeparam>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForQuery`2.OnInvocationStart(`0)">
            <summary>
            Called immediately prior to handling the query.
            </summary>
            <param name="parameters">The query parameters.</param>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForQuery`2.OnInvocationCompletedSuccessfully(`0,`1,System.TimeSpan)">
            <summary>
            Called immediately after successfully handling the query and receiving a result.
            </summary>
            <param name="parameters">The query parameters.</param>
            <param name="result">The query result.</param>
            <param name="timeElapsed">The time elapsed since the start of invocation.</param>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IMetricsCapturingStrategyForQuery`2.OnInvocationException(`0,System.Exception,System.TimeSpan)">
            <summary>
            Called immediately after the query failed due to an uncaught exception.
            </summary>
            <param name="parameters">The query parameters.</param>
            <param name="exception">The exception that caused the query handler to fail.</param>
            <param name="timeElapsed">The time elapsed since the start of invocation.</param>
        </member>
        <member name="T:Functional.CQS.AOP.MetricsCapturing.IUniversalMetricsCapturingStrategy">
            <summary>
            Interface for a metrics capturing strategy that is applied to all IQ.Vanilla.CQS handlers.
            </summary>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IUniversalMetricsCapturingStrategy.OnInvocationStart">
            <summary>
            Called immediately prior to handling the query or command.
            </summary>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IUniversalMetricsCapturingStrategy.OnInvocationCompletedSuccessfully(System.TimeSpan)">
            <summary>
            Called immediately after successfully handling the query or command.
            </summary>
            <param name="timeElapsed">The time elapsed since the start of invocation.</param>
        </member>
        <member name="M:Functional.CQS.AOP.MetricsCapturing.IUniversalMetricsCapturingStrategy.OnInvocationException(System.Exception,System.TimeSpan)">
            <summary>
            Called immediately after the query or command failed due to an uncaught exception.
            </summary>
            <param name="exception">The exception that caused the handler to fail.</param>
            <param name="timeElapsed">The time elapsed since the start of invocation.</param>
        </member>
    </members>
</doc>
